doctype html
html
  head
    title= title
    meta(charset='utf-8')
  body
    textarea#editor(name='editor')
        | #{value}

    script(src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.7.3/socket.io.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/jsdiff/3.2.0/diff.min.js')
    script(src='https://cdn.ckeditor.com/4.6.2/standard/ckeditor.js')
    script.
        let countChanges = 0;
        let content = document.getElementById('editor').value;
        localStorage.setItem('old-version', content);
        document.getElementById('editor').value = '';
        CKEDITOR.replace('editor');
        CKEDITOR.on('instanceReady', e => {
            e.editor.focus();
            e.editor.setData('', () => {
                e.editor.insertHtml(content);
            });
            e.editor.execCommand('maximize')
        });

        let editor = CKEDITOR.instances['editor'];
        let documentId = window.location.href.substr(window.location.href.lastIndexOf('/') + 1);
        let socket = io.connect(`/${documentId}`);
        socket.on('apply updates', differences => {
            let newContent = localStorage.getItem('new-version');
            JsDiff.applyPatch(newContent, differences);
            editor.setData('', () => {
                editor.insertHtml(newContent)
            });
            localStorage.setItem('old-version', newContent);
        });

        editor.on('key', (e) => {
          localStorage.setItem('new-version', e.editor.getData());
          countChanges += 1;
          if (countChanges == 20) {
              socket.emit('send updated content to server', localStorage.getItem('new-version'));
              countChanges = 0;
          };
        });
